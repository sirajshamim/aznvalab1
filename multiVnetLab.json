{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "defaultValue": "[concat('storage',uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": { "description": "Name of the storage account used for the VMs. If not specified, a unique ID will be taken" }
		},
        "vnetNamePrefix": {
            "defaultValue": "myVnet",
            "type": "string",
            "metadata": { "description": "Name of the vNets that will be created containing the subnets and other objects. They will be suffixed by the vNet number: myVnet1, myVnet2, etc." }
        },
        "vnetOctet1": {
            "defaultValue": "10.",
            "type": "string",
            "metadata": { "description": "First octet of the vnet IP space. The second octet depends on the vnet instance (1, 2, 3, etc). Octets 3 and 4 are always 0.0, network mask is always /16" }
        },
        "vnetCount": {
            "defaultValue": 3,
            "type": "int",
            "metadata": { "description": "Number of identical vnets that will be created"}
        },
        "createGw": {
            "defaultValue": "no",
            "type": "string",
            "allowedValues": ["yes", "no"],
            "metadata": { "description": "Basic Vnet VPN Gateways will be created for all 5 Vnets. This has an impact if configuring peerings, since for some options gateways are required"}
        },
        "enableBgp": {
            "defaultValue": "false",
            "type": "string",
            "allowedValues": ["true", "false"]
        },
        "createVm": {
            "defaultValue": "no",
            "type": "string",
            "allowedValues": ["yes", "no"]
        },
        "vmType": {
            "defaultValue": "ubuntu",
            "type": "string",
            "allowedValues": [
                "ubuntu"
            ],
            "metadata": { "description": "Type of VM to optionally create in the first subnet in every vnet"}
		},
        "vmSize": {
            "defaultValue": "Standard_B1s",
            "type": "string"
        },
        "createPip": {
            "defaultValue": "yes",
            "type": "string",
            "allowedValues": ["yes", "no"]
        },
        "adminUsername": {
            "defaultValue": "lab-user",
            "type": "string",
            "metadata": { "description": "Username for the VMs"}
		},
        "adminPassword": {
            "defaultValue": null,
            "type": "securestring",
            "metadata": { "description": "Password for the VMs"}
        },
        "location2ary": {
            "defaultValue": "westus2",
            "type": "string",
            "metadata": { "description": "Secondary location for some of the subnets" }
        },
        "location2aryVnets": {
            "defaultValue": [],
            "type": "array",
            "metadata": { "description": "Array with Vnets to be deployed in the 2ary location" }
        }
    },
 
    "variables": {
		"apiVersion": "2016-03-30"
	},

    "resources": [
        {
			"comments": "Storage account for VM disks",
			"type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {},
            "resources": [],
            "dependsOn": []
        },
		{
			"comments": "vnet with 3 subnets",
			"name": "[concat(parameters('vnetNamePrefix'), '-template-', copyIndex(1))]",
            "type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-06-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[uri(deployment().properties.templateLink.uri, 'vnet3Subnets.json')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters":  {
                    "vnetName": { "value": "[concat(parameters('vnetNamePrefix'), copyIndex(1))]" },
                    "vnetOctets12": { "value": "[concat(parameters('vnetOctet1'), copyIndex(1), '.')]" },
                    "subnetNamePrefix": { "value": "[concat(parameters('vnetNamePrefix'), copyIndex(1), 'Subnet')]"},
                    "gwName": { "value": "[concat(parameters('vnetNamePrefix'), copyIndex(1), 'GW')]" },
                    "gwPIPName": { "value": "[concat(parameters('vnetNamePrefix'), copyIndex(1), 'gwPip')]" },
                    "createGw": { "value": "[parameters('createGw')]"},
                    "enableBgp": { "value": "[parameters('enableBgp')]"},
                    "createVm": { "value": "[parameters('createVm')]"},
                    "vmType": { "value": "[parameters('vmType')]"},
                    "vmSize": { "value": "[parameters('vmSize')]"},
                    "createPip": { "value": "[parameters('createPip')]"},
                    "adminUsername": { "value": "[parameters('adminUsername')]"},
                    "adminPassword": { "value": "[parameters('adminPassword')]"},
                    "location": {"value": "[if(contains(parameters('location2aryVnets'), copyIndex(1)), parameters('location2ary'), resourceGroup().location)]"}
                }
            },
            "dependsOn": [
                "[parameters('storageAccountName')]"
            ],
            "copy": {
                "name": "vnetCopy",
                "count": "[parameters('vnetCount')]"
            }
        }
    ]
}